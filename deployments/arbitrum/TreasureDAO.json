{
  "address": "0xF83Da6e620d7a2DeCef375ee184d4cEB33D057F6",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_atlasMine",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_sushiLP",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_miniChefV2",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_harvesterFactory",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "PID",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "atlasMine",
      "outputs": [
        {
          "internalType": "contract IAtlasMine",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_account",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "subtractedValue",
          "type": "uint256"
        }
      ],
      "name": "decreaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_account",
          "type": "address"
        }
      ],
      "name": "getHarvesterBalance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "harvesterBalance",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_account",
          "type": "address"
        }
      ],
      "name": "getLPBalance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_account",
          "type": "address"
        }
      ],
      "name": "getMineBalance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "userMineBalance",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "harvesterFactory",
      "outputs": [
        {
          "internalType": "contract IHarvesterFactory",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "addedValue",
          "type": "uint256"
        }
      ],
      "name": "increaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "miniChefV2",
      "outputs": [
        {
          "internalType": "contract IMiniChefV2",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "sushiLP",
      "outputs": [
        {
          "internalType": "contract IUniswapV2Pair",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0x15044f9e4a2167b9306a53a4884ee9acb103718250c52a71b55e1b5519bed0a5",
  "receipt": {
    "to": null,
    "from": "0x393248aE29A7C2128E8E27d23330b1F87E0600fc",
    "contractAddress": "0xF83Da6e620d7a2DeCef375ee184d4cEB33D057F6",
    "transactionIndex": 1,
    "gasUsed": "3844537",
    "logsBloom": "0x
    "blockHash": "0xcb2e857f0bde9b7f238465bdb3f89deb33d40c732bcf9da5b3caeb8c00498d98",
    "transactionHash": "0x15044f9e4a2167b9306a53a4884ee9acb103718250c52a71b55e1b5519bed0a5",
    "logs": [],
    "blockNumber": 25358216,
    "cumulativeGasUsed": "3844537",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0xA0A89db1C899c49F98E6326b764BAFcf167fC2CE",
    "0xB7E50106A5bd3Cf21AF210A755F9C8740890A8c9",
    "0xF4d73326C13a4Fc5FD7A064217e12780e9Bd62c3",
    "0xE59aEc5f6F631EF380dd4e60D531ff3aE2985CFd"
  ],
  "solcInputHash": "34bb1cf9f178d1d3c5b6f2a8002c9b58",
  "metadata": "{\"compiler\":{\"version\":\"0.8.14+commit.80d49f37\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_atlasMine\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_sushiLP\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_miniChefV2\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_harvesterFactory\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"PID\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"atlasMine\",\"outputs\":[{\"internalType\":\"contract IAtlasMine\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_account\",\"type\":\"address\"}],\"name\":\"getHarvesterBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"harvesterBalance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_account\",\"type\":\"address\"}],\"name\":\"getLPBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_account\",\"type\":\"address\"}],\"name\":\"getMineBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"userMineBalance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"harvesterFactory\",\"outputs\":[{\"internalType\":\"contract IHarvesterFactory\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"miniChefV2\",\"outputs\":[{\"internalType\":\"contract IMiniChefV2\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"sushiLP\",\"outputs\":[{\"internalType\":\"contract IUniswapV2Pair\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/MagicGov.sol\":\"TreasureDAO\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (token/ERC20/ERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./IERC20.sol\\\";\\nimport \\\"./extensions/IERC20Metadata.sol\\\";\\nimport \\\"../../utils/Context.sol\\\";\\n\\n/**\\n * @dev Implementation of the {IERC20} interface.\\n *\\n * This implementation is agnostic to the way tokens are created. This means\\n * that a supply mechanism has to be added in a derived contract using {_mint}.\\n * For a generic mechanism see {ERC20PresetMinterPauser}.\\n *\\n * TIP: For a detailed writeup see our guide\\n * https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How\\n * to implement supply mechanisms].\\n *\\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\\n * instead returning `false` on failure. This behavior is nonetheless\\n * conventional and does not conflict with the expectations of ERC20\\n * applications.\\n *\\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\\n * This allows applications to reconstruct the allowance for all accounts just\\n * by listening to said events. Other implementations of the EIP may not emit\\n * these events, as it isn't required by the specification.\\n *\\n * Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\\n * functions have been added to mitigate the well-known issues around setting\\n * allowances. See {IERC20-approve}.\\n */\\ncontract ERC20 is Context, IERC20, IERC20Metadata {\\n    mapping(address => uint256) private _balances;\\n\\n    mapping(address => mapping(address => uint256)) private _allowances;\\n\\n    uint256 private _totalSupply;\\n\\n    string private _name;\\n    string private _symbol;\\n\\n    /**\\n     * @dev Sets the values for {name} and {symbol}.\\n     *\\n     * The default value of {decimals} is 18. To select a different value for\\n     * {decimals} you should overload it.\\n     *\\n     * All two of these values are immutable: they can only be set once during\\n     * construction.\\n     */\\n    constructor(string memory name_, string memory symbol_) {\\n        _name = name_;\\n        _symbol = symbol_;\\n    }\\n\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() public view virtual override returns (string memory) {\\n        return _name;\\n    }\\n\\n    /**\\n     * @dev Returns the symbol of the token, usually a shorter version of the\\n     * name.\\n     */\\n    function symbol() public view virtual override returns (string memory) {\\n        return _symbol;\\n    }\\n\\n    /**\\n     * @dev Returns the number of decimals used to get its user representation.\\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\\n     *\\n     * Tokens usually opt for a value of 18, imitating the relationship between\\n     * Ether and Wei. This is the value {ERC20} uses, unless this function is\\n     * overridden;\\n     *\\n     * NOTE: This information is only used for _display_ purposes: it in\\n     * no way affects any of the arithmetic of the contract, including\\n     * {IERC20-balanceOf} and {IERC20-transfer}.\\n     */\\n    function decimals() public view virtual override returns (uint8) {\\n        return 18;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-totalSupply}.\\n     */\\n    function totalSupply() public view virtual override returns (uint256) {\\n        return _totalSupply;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-balanceOf}.\\n     */\\n    function balanceOf(address account) public view virtual override returns (uint256) {\\n        return _balances[account];\\n    }\\n\\n    /**\\n     * @dev See {IERC20-transfer}.\\n     *\\n     * Requirements:\\n     *\\n     * - `to` cannot be the zero address.\\n     * - the caller must have a balance of at least `amount`.\\n     */\\n    function transfer(address to, uint256 amount) public virtual override returns (bool) {\\n        address owner = _msgSender();\\n        _transfer(owner, to, amount);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-allowance}.\\n     */\\n    function allowance(address owner, address spender) public view virtual override returns (uint256) {\\n        return _allowances[owner][spender];\\n    }\\n\\n    /**\\n     * @dev See {IERC20-approve}.\\n     *\\n     * NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on\\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     */\\n    function approve(address spender, uint256 amount) public virtual override returns (bool) {\\n        address owner = _msgSender();\\n        _approve(owner, spender, amount);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-transferFrom}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance. This is not\\n     * required by the EIP. See the note at the beginning of {ERC20}.\\n     *\\n     * NOTE: Does not update the allowance if the current allowance\\n     * is the maximum `uint256`.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` and `to` cannot be the zero address.\\n     * - `from` must have a balance of at least `amount`.\\n     * - the caller must have allowance for ``from``'s tokens of at least\\n     * `amount`.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) public virtual override returns (bool) {\\n        address spender = _msgSender();\\n        _spendAllowance(from, spender, amount);\\n        _transfer(from, to, amount);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Atomically increases the allowance granted to `spender` by the caller.\\n     *\\n     * This is an alternative to {approve} that can be used as a mitigation for\\n     * problems described in {IERC20-approve}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     */\\n    function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {\\n        address owner = _msgSender();\\n        _approve(owner, spender, allowance(owner, spender) + addedValue);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Atomically decreases the allowance granted to `spender` by the caller.\\n     *\\n     * This is an alternative to {approve} that can be used as a mitigation for\\n     * problems described in {IERC20-approve}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     * - `spender` must have allowance for the caller of at least\\n     * `subtractedValue`.\\n     */\\n    function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {\\n        address owner = _msgSender();\\n        uint256 currentAllowance = allowance(owner, spender);\\n        require(currentAllowance >= subtractedValue, \\\"ERC20: decreased allowance below zero\\\");\\n        unchecked {\\n            _approve(owner, spender, currentAllowance - subtractedValue);\\n        }\\n\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Moves `amount` of tokens from `from` to `to`.\\n     *\\n     * This internal function is equivalent to {transfer}, and can be used to\\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\\n     *\\n     * Emits a {Transfer} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `from` must have a balance of at least `amount`.\\n     */\\n    function _transfer(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) internal virtual {\\n        require(from != address(0), \\\"ERC20: transfer from the zero address\\\");\\n        require(to != address(0), \\\"ERC20: transfer to the zero address\\\");\\n\\n        _beforeTokenTransfer(from, to, amount);\\n\\n        uint256 fromBalance = _balances[from];\\n        require(fromBalance >= amount, \\\"ERC20: transfer amount exceeds balance\\\");\\n        unchecked {\\n            _balances[from] = fromBalance - amount;\\n        }\\n        _balances[to] += amount;\\n\\n        emit Transfer(from, to, amount);\\n\\n        _afterTokenTransfer(from, to, amount);\\n    }\\n\\n    /** @dev Creates `amount` tokens and assigns them to `account`, increasing\\n     * the total supply.\\n     *\\n     * Emits a {Transfer} event with `from` set to the zero address.\\n     *\\n     * Requirements:\\n     *\\n     * - `account` cannot be the zero address.\\n     */\\n    function _mint(address account, uint256 amount) internal virtual {\\n        require(account != address(0), \\\"ERC20: mint to the zero address\\\");\\n\\n        _beforeTokenTransfer(address(0), account, amount);\\n\\n        _totalSupply += amount;\\n        _balances[account] += amount;\\n        emit Transfer(address(0), account, amount);\\n\\n        _afterTokenTransfer(address(0), account, amount);\\n    }\\n\\n    /**\\n     * @dev Destroys `amount` tokens from `account`, reducing the\\n     * total supply.\\n     *\\n     * Emits a {Transfer} event with `to` set to the zero address.\\n     *\\n     * Requirements:\\n     *\\n     * - `account` cannot be the zero address.\\n     * - `account` must have at least `amount` tokens.\\n     */\\n    function _burn(address account, uint256 amount) internal virtual {\\n        require(account != address(0), \\\"ERC20: burn from the zero address\\\");\\n\\n        _beforeTokenTransfer(account, address(0), amount);\\n\\n        uint256 accountBalance = _balances[account];\\n        require(accountBalance >= amount, \\\"ERC20: burn amount exceeds balance\\\");\\n        unchecked {\\n            _balances[account] = accountBalance - amount;\\n        }\\n        _totalSupply -= amount;\\n\\n        emit Transfer(account, address(0), amount);\\n\\n        _afterTokenTransfer(account, address(0), amount);\\n    }\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\\n     *\\n     * This internal function is equivalent to `approve`, and can be used to\\n     * e.g. set automatic allowances for certain subsystems, etc.\\n     *\\n     * Emits an {Approval} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `owner` cannot be the zero address.\\n     * - `spender` cannot be the zero address.\\n     */\\n    function _approve(\\n        address owner,\\n        address spender,\\n        uint256 amount\\n    ) internal virtual {\\n        require(owner != address(0), \\\"ERC20: approve from the zero address\\\");\\n        require(spender != address(0), \\\"ERC20: approve to the zero address\\\");\\n\\n        _allowances[owner][spender] = amount;\\n        emit Approval(owner, spender, amount);\\n    }\\n\\n    /**\\n     * @dev Updates `owner` s allowance for `spender` based on spent `amount`.\\n     *\\n     * Does not update the allowance amount in case of infinite allowance.\\n     * Revert if not enough allowance is available.\\n     *\\n     * Might emit an {Approval} event.\\n     */\\n    function _spendAllowance(\\n        address owner,\\n        address spender,\\n        uint256 amount\\n    ) internal virtual {\\n        uint256 currentAllowance = allowance(owner, spender);\\n        if (currentAllowance != type(uint256).max) {\\n            require(currentAllowance >= amount, \\\"ERC20: insufficient allowance\\\");\\n            unchecked {\\n                _approve(owner, spender, currentAllowance - amount);\\n            }\\n        }\\n    }\\n\\n    /**\\n     * @dev Hook that is called before any transfer of tokens. This includes\\n     * minting and burning.\\n     *\\n     * Calling conditions:\\n     *\\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\\n     * will be transferred to `to`.\\n     * - when `from` is zero, `amount` tokens will be minted for `to`.\\n     * - when `to` is zero, `amount` of ``from``'s tokens will be burned.\\n     * - `from` and `to` are never both zero.\\n     *\\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\\n     */\\n    function _beforeTokenTransfer(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) internal virtual {}\\n\\n    /**\\n     * @dev Hook that is called after any transfer of tokens. This includes\\n     * minting and burning.\\n     *\\n     * Calling conditions:\\n     *\\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\\n     * has been transferred to `to`.\\n     * - when `from` is zero, `amount` tokens have been minted for `to`.\\n     * - when `to` is zero, `amount` of ``from``'s tokens have been burned.\\n     * - `from` and `to` are never both zero.\\n     *\\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\\n     */\\n    function _afterTokenTransfer(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) internal virtual {}\\n}\\n\",\"keccak256\":\"0x24b04b8aacaaf1a4a0719117b29c9c3647b1f479c5ac2a60f5ff1bb6d839c238\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) external returns (bool);\\n}\\n\",\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/extensions/IERC20Metadata.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC20.sol\\\";\\n\\n/**\\n * @dev Interface for the optional metadata functions from the ERC20 standard.\\n *\\n * _Available since v4.1._\\n */\\ninterface IERC20Metadata is IERC20 {\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the symbol of the token.\\n     */\\n    function symbol() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the decimals places of the token.\\n     */\\n    function decimals() external view returns (uint8);\\n}\\n\",\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"},\"contracts/MagicGov.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity >=0.8.11;\\n\\nimport '@openzeppelin/contracts/token/ERC20/ERC20.sol';\\n\\ninterface IUniswapV2Pair {\\n    function totalSupply() external view returns (uint);\\n    function token0() external view returns (address);\\n    function getReserves() external view returns (uint112 reserve0, uint112 reserve1, uint32 blockTimestampLast);\\n}\\n\\ninterface IMiniChefV2 {\\n    function userInfo(uint256 _pid, address _user) external view returns (uint256 amount, int256 rewardDebt);\\n}\\n\\ninterface IAtlasMine {\\n    enum Lock { twoWeeks, oneMonth, threeMonths, sixMonths, twelveMonths }\\n\\n    function magic() external view returns (IERC20);\\n    function getAllUserDepositIds(address _user) external view returns (uint256[] memory);\\n    function userInfo(address _user, uint256 _depositId) external view virtual returns (\\n        uint256 originalDepositAmount,\\n        uint256 depositAmount,\\n        uint256 lpAmount,\\n        uint256 lockedUntil,\\n        uint256 vestingLastUpdate,\\n        int256 rewardDebt,\\n        Lock lock);\\n    function getLockBoost(Lock _lock) external pure returns (uint256 boost, uint256 timelock);\\n    function ONE() external pure returns (uint256);\\n}\\n\\ninterface IHarvester {\\n    function getUserGlobalDeposit(address _user) external view returns (uint256 globalDepositAmount, uint256 globalLockLpAmount, uint256 globalLpAmount, int256 globalRewardDebt);\\n}\\n\\ninterface IHarvesterFactory {\\n    function getAllHarvesters() external view returns (address[] memory);\\n}\\n\\ncontract TreasureDAO is ERC20 {\\n    uint256 public constant PID = 13;\\n\\n    IAtlasMine public atlasMine;\\n    IUniswapV2Pair public sushiLP;\\n    IMiniChefV2 public miniChefV2;\\n    IHarvesterFactory public harvesterFactory;\\n\\n    constructor(address _atlasMine, address _sushiLP, address _miniChefV2, address _harvesterFactory) ERC20(\\\"Treasure DAO Governance\\\", \\\"gMAGIC\\\") {\\n        atlasMine = IAtlasMine(_atlasMine);\\n        sushiLP = IUniswapV2Pair(_sushiLP);\\n        miniChefV2 = IMiniChefV2(_miniChefV2);\\n        harvesterFactory = IHarvesterFactory(_harvesterFactory);\\n    }\\n\\n    function totalSupply() public view override returns (uint256) {\\n        return atlasMine.magic().totalSupply();\\n    }\\n\\n    function balanceOf(address _account) public view override returns (uint256) {\\n        return getMineBalance(_account) + getLPBalance(_account) + getHarvesterBalance(_account);\\n    }\\n\\n    function getMineBalance(address _account) public view returns (uint256 userMineBalance) {\\n        uint256[] memory allUserDepositIds = atlasMine.getAllUserDepositIds(_account);\\n        uint256 len = allUserDepositIds.length;\\n        for (uint256 i = 0; i < len; i++) {\\n            uint256 depositId = allUserDepositIds[i];\\n            (, uint256 depositAmount,,,,, IAtlasMine.Lock lock) = atlasMine.userInfo(_account, depositId);\\n            (uint256 lockBoost, ) = atlasMine.getLockBoost(lock);\\n            uint256 lpAmount = depositAmount + depositAmount * lockBoost / atlasMine.ONE();\\n            userMineBalance += lpAmount;\\n        }\\n    }\\n\\n    function getLPBalance(address _account) public view returns (uint256) {\\n        (uint256 liquidity, ) = miniChefV2.userInfo(PID, _account);\\n        (uint112 _reserve0, uint112 _reserve1,) = sushiLP.getReserves();\\n\\n        if (address(atlasMine.magic()) == sushiLP.token0()) {\\n            return _reserve0 * liquidity / sushiLP.totalSupply();\\n        } else {\\n            return _reserve1 * liquidity / sushiLP.totalSupply();\\n        }\\n    }\\n\\n    function getHarvesterBalance(address _account) public view returns (uint256 harvesterBalance) {\\n        address[] memory harvesters = harvesterFactory.getAllHarvesters();\\n        uint256 len = harvesters.length;\\n        for (uint256 i = 0; i < len; i++) {\\n            (uint256 globalDepositAmount,,,) = IHarvester(harvesters[i]).getUserGlobalDeposit(_account);\\n            harvesterBalance += globalDepositAmount;\\n        }\\n    }\\n\\n    function _beforeTokenTransfer(address, address, uint256) internal pure override {\\n        revert(\\\"Non-transferable\\\");\\n    }\\n}\\n\",\"keccak256\":\"0x13cecb55ffbca92bb3234333e045f99ac0a6d64de320fd227aff6b9c7f0c4a2d\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60806040523480156200001157600080fd5b50604051620017b7380380620017b78339810160408190526200003491620001c7565b604080518082018252601781527f54726561737572652044414f20476f7665726e616e6365000000000000000000602080830191825283518085019094526006845265674d4147494360d01b908401528151919291620000979160039162000104565b508051620000ad90600490602084019062000104565b5050600580546001600160a01b039687166001600160a01b03199182161790915560068054958716958216959095179094555060078054928516928416929092179091556008805491909316911617905562000260565b828054620001129062000224565b90600052602060002090601f01602090048101928262000136576000855562000181565b82601f106200015157805160ff191683800117855562000181565b8280016001018555821562000181579182015b828111156200018157825182559160200191906001019062000164565b506200018f92915062000193565b5090565b5b808211156200018f576000815560010162000194565b80516001600160a01b0381168114620001c257600080fd5b919050565b60008060008060808587031215620001de57600080fd5b620001e985620001aa565b9350620001f960208601620001aa565b92506200020960408601620001aa565b91506200021960608601620001aa565b905092959194509250565b600181811c908216806200023957607f821691505b6020821081036200025a57634e487b7160e01b600052602260045260246000fd5b50919050565b61154780620002706000396000f3fe608060405234801561001057600080fd5b50600436106101215760003560e01c80636742508c116100ad578063a9059cbb11610071578063a9059cbb1461024c578063bddd79c61461025f578063d2258beb14610272578063dd62ed3e14610285578063f828b6561461029857600080fd5b80636742508c146101f857806370a082311461020b578063843086ab1461021e57806395d89b4114610231578063a457c2d71461023957600080fd5b8063313ce567116100f4578063313ce56714610190578063395093511461019f5780633995c880146101b25780634b7f6363146101dd5780635eaec0e4146101f057600080fd5b806306fdde0314610126578063095ea7b31461014457806318160ddd1461016757806323b872dd1461017d575b600080fd5b61012e6102ab565b60405161013b9190610fea565b60405180910390f35b610157610152366004611057565b61033d565b604051901515815260200161013b565b61016f610355565b60405190815260200161013b565b61015761018b366004611083565b610429565b6040516012815260200161013b565b6101576101ad366004611057565b61044d565b6005546101c5906001600160a01b031681565b6040516001600160a01b03909116815260200161013b565b6007546101c5906001600160a01b031681565b61016f600d81565b61016f6102063660046110c4565b61046f565b61016f6102193660046110c4565b6106d4565b61016f61022c3660046110c4565b61070b565b61012e61084a565b610157610247366004611057565b610859565b61015761025a366004611057565b6108d9565b6008546101c5906001600160a01b031681565b61016f6102803660046110c4565b6108e7565b61016f6102933660046110e8565b610c0d565b6006546101c5906001600160a01b031681565b6060600380546102ba90611121565b80601f01602080910402602001604051908101604052809291908181526020018280546102e690611121565b80156103335780601f1061030857610100808354040283529160200191610333565b820191906000526020600020905b81548152906001019060200180831161031657829003601f168201915b5050505050905090565b60003361034b818585610c38565b5060019392505050565b600554604080516306c2a32360e11b815290516000926001600160a01b031691630d8546469160048083019260209291908290030181865afa15801561039f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103c3919061115b565b6001600160a01b03166318160ddd6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610400573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104249190611178565b905090565b600033610437858285610d5c565b610442858585610dd6565b506001949350505050565b60003361034b8185856104608383610c0d565b61046a91906111a7565b610c38565b6005546040516306ea08bd60e11b81526001600160a01b0383811660048301526000928392911690630dd4117a90602401600060405180830381865afa1580156104bd573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526104e5919081019061122a565b805190915060005b818110156106cc576000838281518110610509576105096112c0565b60209081029190910101516005546040516321ce919d60e01b81526001600160a01b03898116600483015260248201849052929350600092839216906321ce919d9060440160e060405180830381865afa15801561056b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061058f91906112d6565b600554604051630293519f60e21b8152969950909750600096506001600160a01b031694630a4d467c94506105cc9350879250600401905061133a565b6040805180830381865afa1580156105e8573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061060c9190611362565b5090506000600560009054906101000a90046001600160a01b03166001600160a01b031663c2ee3a086040518163ffffffff1660e01b8152600401602060405180830381865afa158015610664573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106889190611178565b6106928386611386565b61069c91906113a5565b6106a690856111a7565b90506106b2818a6111a7565b9850505050505080806106c4906113c7565b9150506104ed565b505050919050565b60006106df8261070b565b6106e8836108e7565b6106f18461046f565b6106fb91906111a7565b61070591906111a7565b92915050565b600080600860009054906101000a90046001600160a01b03166001600160a01b03166323f5513c6040518163ffffffff1660e01b8152600401600060405180830381865afa158015610761573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261078991908101906113e0565b805190915060005b818110156106cc5760008382815181106107ad576107ad6112c0565b602090810291909101015160405163077e024760e01b81526001600160a01b0388811660048301529091169063077e024790602401608060405180830381865afa1580156107ff573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610823919061146f565b5050509050808561083491906111a7565b9450508080610842906113c7565b915050610791565b6060600480546102ba90611121565b600033816108678286610c0d565b9050838110156108cc5760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084015b60405180910390fd5b6104428286868403610c38565b60003361034b818585610dd6565b6007546040516393f1a40b60e01b8152600d60048201526001600160a01b03838116602483015260009283929116906393f1a40b906044016040805180830381865afa15801561093b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061095f9190611362565b509050600080600660009054906101000a90046001600160a01b03166001600160a01b0316630902f1ac6040518163ffffffff1660e01b8152600401606060405180830381865afa1580156109b8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109dc91906114c1565b5091509150600660009054906101000a90046001600160a01b03166001600160a01b0316630dfe16816040518163ffffffff1660e01b8152600401602060405180830381865afa158015610a34573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a58919061115b565b6001600160a01b0316600560009054906101000a90046001600160a01b03166001600160a01b0316630d8546466040518163ffffffff1660e01b8152600401602060405180830381865afa158015610ab4573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ad8919061115b565b6001600160a01b031603610b8357600660009054906101000a90046001600160a01b03166001600160a01b03166318160ddd6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610b39573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b5d9190611178565b610b70846001600160701b038516611386565b610b7a91906113a5565b95945050505050565b600660009054906101000a90046001600160a01b03166001600160a01b03166318160ddd6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610bd6573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bfa9190611178565b610b70846001600160701b038416611386565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6001600160a01b038316610c9a5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b60648201526084016108c3565b6001600160a01b038216610cfb5760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b60648201526084016108c3565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6000610d688484610c0d565b90506000198114610dd05781811015610dc35760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e636500000060448201526064016108c3565b610dd08484848403610c38565b50505050565b6001600160a01b038316610e3a5760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b60648201526084016108c3565b6001600160a01b038216610e9c5760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b60648201526084016108c3565b610ea7838383610faf565b6001600160a01b03831660009081526020819052604090205481811015610f1f5760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b60648201526084016108c3565b6001600160a01b03808516600090815260208190526040808220858503905591851681529081208054849290610f569084906111a7565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610fa291815260200190565b60405180910390a3610dd0565b60405162461bcd60e51b815260206004820152601060248201526f4e6f6e2d7472616e7366657261626c6560801b60448201526064016108c3565b600060208083528351808285015260005b8181101561101757858101830151858201604001528201610ffb565b81811115611029576000604083870101525b50601f01601f1916929092016040019392505050565b6001600160a01b038116811461105457600080fd5b50565b6000806040838503121561106a57600080fd5b82356110758161103f565b946020939093013593505050565b60008060006060848603121561109857600080fd5b83356110a38161103f565b925060208401356110b38161103f565b929592945050506040919091013590565b6000602082840312156110d657600080fd5b81356110e18161103f565b9392505050565b600080604083850312156110fb57600080fd5b82356111068161103f565b915060208301356111168161103f565b809150509250929050565b600181811c9082168061113557607f821691505b60208210810361115557634e487b7160e01b600052602260045260246000fd5b50919050565b60006020828403121561116d57600080fd5b81516110e18161103f565b60006020828403121561118a57600080fd5b5051919050565b634e487b7160e01b600052601160045260246000fd5b600082198211156111ba576111ba611191565b500190565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff811182821017156111fe576111fe6111bf565b604052919050565b600067ffffffffffffffff821115611220576112206111bf565b5060051b60200190565b6000602080838503121561123d57600080fd5b825167ffffffffffffffff81111561125457600080fd5b8301601f8101851361126557600080fd5b805161127861127382611206565b6111d5565b81815260059190911b8201830190838101908783111561129757600080fd5b928401925b828410156112b55783518252928401929084019061129c565b979650505050505050565b634e487b7160e01b600052603260045260246000fd5b600080600080600080600060e0888a0312156112f157600080fd5b875196506020880151955060408801519450606088015193506080880151925060a0880151915060c08801516005811061132a57600080fd5b8091505092959891949750929550565b602081016005831061135c57634e487b7160e01b600052602160045260246000fd5b91905290565b6000806040838503121561137557600080fd5b505080516020909101519092909150565b60008160001904831182151516156113a0576113a0611191565b500290565b6000826113c257634e487b7160e01b600052601260045260246000fd5b500490565b6000600182016113d9576113d9611191565b5060010190565b600060208083850312156113f357600080fd5b825167ffffffffffffffff81111561140a57600080fd5b8301601f8101851361141b57600080fd5b805161142961127382611206565b81815260059190911b8201830190838101908783111561144857600080fd5b928401925b828410156112b55783516114608161103f565b8252928401929084019061144d565b6000806000806080858703121561148557600080fd5b505082516020840151604085015160609095015191969095509092509050565b80516001600160701b03811681146114bc57600080fd5b919050565b6000806000606084860312156114d657600080fd5b6114df846114a5565b92506114ed602085016114a5565b9150604084015163ffffffff8116811461150657600080fd5b80915050925092509256fea26469706673582212204fa82644eb4b473d6d234e99688ef3a8026062bef6b5fa7fae5102967fb314c864736f6c634300080e0033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106101215760003560e01c80636742508c116100ad578063a9059cbb11610071578063a9059cbb1461024c578063bddd79c61461025f578063d2258beb14610272578063dd62ed3e14610285578063f828b6561461029857600080fd5b80636742508c146101f857806370a082311461020b578063843086ab1461021e57806395d89b4114610231578063a457c2d71461023957600080fd5b8063313ce567116100f4578063313ce56714610190578063395093511461019f5780633995c880146101b25780634b7f6363146101dd5780635eaec0e4146101f057600080fd5b806306fdde0314610126578063095ea7b31461014457806318160ddd1461016757806323b872dd1461017d575b600080fd5b61012e6102ab565b60405161013b9190610fea565b60405180910390f35b610157610152366004611057565b61033d565b604051901515815260200161013b565b61016f610355565b60405190815260200161013b565b61015761018b366004611083565b610429565b6040516012815260200161013b565b6101576101ad366004611057565b61044d565b6005546101c5906001600160a01b031681565b6040516001600160a01b03909116815260200161013b565b6007546101c5906001600160a01b031681565b61016f600d81565b61016f6102063660046110c4565b61046f565b61016f6102193660046110c4565b6106d4565b61016f61022c3660046110c4565b61070b565b61012e61084a565b610157610247366004611057565b610859565b61015761025a366004611057565b6108d9565b6008546101c5906001600160a01b031681565b61016f6102803660046110c4565b6108e7565b61016f6102933660046110e8565b610c0d565b6006546101c5906001600160a01b031681565b6060600380546102ba90611121565b80601f01602080910402602001604051908101604052809291908181526020018280546102e690611121565b80156103335780601f1061030857610100808354040283529160200191610333565b820191906000526020600020905b81548152906001019060200180831161031657829003601f168201915b5050505050905090565b60003361034b818585610c38565b5060019392505050565b600554604080516306c2a32360e11b815290516000926001600160a01b031691630d8546469160048083019260209291908290030181865afa15801561039f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103c3919061115b565b6001600160a01b03166318160ddd6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610400573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104249190611178565b905090565b600033610437858285610d5c565b610442858585610dd6565b506001949350505050565b60003361034b8185856104608383610c0d565b61046a91906111a7565b610c38565b6005546040516306ea08bd60e11b81526001600160a01b0383811660048301526000928392911690630dd4117a90602401600060405180830381865afa1580156104bd573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526104e5919081019061122a565b805190915060005b818110156106cc576000838281518110610509576105096112c0565b60209081029190910101516005546040516321ce919d60e01b81526001600160a01b03898116600483015260248201849052929350600092839216906321ce919d9060440160e060405180830381865afa15801561056b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061058f91906112d6565b600554604051630293519f60e21b8152969950909750600096506001600160a01b031694630a4d467c94506105cc9350879250600401905061133a565b6040805180830381865afa1580156105e8573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061060c9190611362565b5090506000600560009054906101000a90046001600160a01b03166001600160a01b031663c2ee3a086040518163ffffffff1660e01b8152600401602060405180830381865afa158015610664573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106889190611178565b6106928386611386565b61069c91906113a5565b6106a690856111a7565b90506106b2818a6111a7565b9850505050505080806106c4906113c7565b9150506104ed565b505050919050565b60006106df8261070b565b6106e8836108e7565b6106f18461046f565b6106fb91906111a7565b61070591906111a7565b92915050565b600080600860009054906101000a90046001600160a01b03166001600160a01b03166323f5513c6040518163ffffffff1660e01b8152600401600060405180830381865afa158015610761573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261078991908101906113e0565b805190915060005b818110156106cc5760008382815181106107ad576107ad6112c0565b602090810291909101015160405163077e024760e01b81526001600160a01b0388811660048301529091169063077e024790602401608060405180830381865afa1580156107ff573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610823919061146f565b5050509050808561083491906111a7565b9450508080610842906113c7565b915050610791565b6060600480546102ba90611121565b600033816108678286610c0d565b9050838110156108cc5760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084015b60405180910390fd5b6104428286868403610c38565b60003361034b818585610dd6565b6007546040516393f1a40b60e01b8152600d60048201526001600160a01b03838116602483015260009283929116906393f1a40b906044016040805180830381865afa15801561093b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061095f9190611362565b509050600080600660009054906101000a90046001600160a01b03166001600160a01b0316630902f1ac6040518163ffffffff1660e01b8152600401606060405180830381865afa1580156109b8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109dc91906114c1565b5091509150600660009054906101000a90046001600160a01b03166001600160a01b0316630dfe16816040518163ffffffff1660e01b8152600401602060405180830381865afa158015610a34573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a58919061115b565b6001600160a01b0316600560009054906101000a90046001600160a01b03166001600160a01b0316630d8546466040518163ffffffff1660e01b8152600401602060405180830381865afa158015610ab4573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ad8919061115b565b6001600160a01b031603610b8357600660009054906101000a90046001600160a01b03166001600160a01b03166318160ddd6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610b39573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b5d9190611178565b610b70846001600160701b038516611386565b610b7a91906113a5565b95945050505050565b600660009054906101000a90046001600160a01b03166001600160a01b03166318160ddd6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610bd6573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bfa9190611178565b610b70846001600160701b038416611386565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6001600160a01b038316610c9a5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b60648201526084016108c3565b6001600160a01b038216610cfb5760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b60648201526084016108c3565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6000610d688484610c0d565b90506000198114610dd05781811015610dc35760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e636500000060448201526064016108c3565b610dd08484848403610c38565b50505050565b6001600160a01b038316610e3a5760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b60648201526084016108c3565b6001600160a01b038216610e9c5760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b60648201526084016108c3565b610ea7838383610faf565b6001600160a01b03831660009081526020819052604090205481811015610f1f5760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b60648201526084016108c3565b6001600160a01b03808516600090815260208190526040808220858503905591851681529081208054849290610f569084906111a7565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610fa291815260200190565b60405180910390a3610dd0565b60405162461bcd60e51b815260206004820152601060248201526f4e6f6e2d7472616e7366657261626c6560801b60448201526064016108c3565b600060208083528351808285015260005b8181101561101757858101830151858201604001528201610ffb565b81811115611029576000604083870101525b50601f01601f1916929092016040019392505050565b6001600160a01b038116811461105457600080fd5b50565b6000806040838503121561106a57600080fd5b82356110758161103f565b946020939093013593505050565b60008060006060848603121561109857600080fd5b83356110a38161103f565b925060208401356110b38161103f565b929592945050506040919091013590565b6000602082840312156110d657600080fd5b81356110e18161103f565b9392505050565b600080604083850312156110fb57600080fd5b82356111068161103f565b915060208301356111168161103f565b809150509250929050565b600181811c9082168061113557607f821691505b60208210810361115557634e487b7160e01b600052602260045260246000fd5b50919050565b60006020828403121561116d57600080fd5b81516110e18161103f565b60006020828403121561118a57600080fd5b5051919050565b634e487b7160e01b600052601160045260246000fd5b600082198211156111ba576111ba611191565b500190565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff811182821017156111fe576111fe6111bf565b604052919050565b600067ffffffffffffffff821115611220576112206111bf565b5060051b60200190565b6000602080838503121561123d57600080fd5b825167ffffffffffffffff81111561125457600080fd5b8301601f8101851361126557600080fd5b805161127861127382611206565b6111d5565b81815260059190911b8201830190838101908783111561129757600080fd5b928401925b828410156112b55783518252928401929084019061129c565b979650505050505050565b634e487b7160e01b600052603260045260246000fd5b600080600080600080600060e0888a0312156112f157600080fd5b875196506020880151955060408801519450606088015193506080880151925060a0880151915060c08801516005811061132a57600080fd5b8091505092959891949750929550565b602081016005831061135c57634e487b7160e01b600052602160045260246000fd5b91905290565b6000806040838503121561137557600080fd5b505080516020909101519092909150565b60008160001904831182151516156113a0576113a0611191565b500290565b6000826113c257634e487b7160e01b600052601260045260246000fd5b500490565b6000600182016113d9576113d9611191565b5060010190565b600060208083850312156113f357600080fd5b825167ffffffffffffffff81111561140a57600080fd5b8301601f8101851361141b57600080fd5b805161142961127382611206565b81815260059190911b8201830190838101908783111561144857600080fd5b928401925b828410156112b55783516114608161103f565b8252928401929084019061144d565b6000806000806080858703121561148557600080fd5b505082516020840151604085015160609095015191969095509092509050565b80516001600160701b03811681146114bc57600080fd5b919050565b6000806000606084860312156114d657600080fd5b6114df846114a5565b92506114ed602085016114a5565b9150604084015163ffffffff8116811461150657600080fd5b80915050925092509256fea26469706673582212204fa82644eb4b473d6d234e99688ef3a8026062bef6b5fa7fae5102967fb314c864736f6c634300080e0033",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "allowance(address,address)": {
        "details": "See {IERC20-allowance}."
      },
      "approve(address,uint256)": {
        "details": "See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
      },
      "decimals()": {
        "details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
      },
      "decreaseAllowance(address,uint256)": {
        "details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
      },
      "increaseAllowance(address,uint256)": {
        "details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
      },
      "name()": {
        "details": "Returns the name of the token."
      },
      "symbol()": {
        "details": "Returns the symbol of the token, usually a shorter version of the name."
      },
      "totalSupply()": {
        "details": "See {IERC20-totalSupply}."
      },
      "transfer(address,uint256)": {
        "details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`."
      },
      "transferFrom(address,address,uint256)": {
        "details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 15,
        "contract": "contracts/MagicGov.sol:TreasureDAO",
        "label": "_balances",
        "offset": 0,
        "slot": "0",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 21,
        "contract": "contracts/MagicGov.sol:TreasureDAO",
        "label": "_allowances",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
      },
      {
        "astId": 23,
        "contract": "contracts/MagicGov.sol:TreasureDAO",
        "label": "_totalSupply",
        "offset": 0,
        "slot": "2",
        "type": "t_uint256"
      },
      {
        "astId": 25,
        "contract": "contracts/MagicGov.sol:TreasureDAO",
        "label": "_name",
        "offset": 0,
        "slot": "3",
        "type": "t_string_storage"
      },
      {
        "astId": 27,
        "contract": "contracts/MagicGov.sol:TreasureDAO",
        "label": "_symbol",
        "offset": 0,
        "slot": "4",
        "type": "t_string_storage"
      },
      {
        "astId": 832,
        "contract": "contracts/MagicGov.sol:TreasureDAO",
        "label": "atlasMine",
        "offset": 0,
        "slot": "5",
        "type": "t_contract(IAtlasMine)803"
      },
      {
        "astId": 835,
        "contract": "contracts/MagicGov.sol:TreasureDAO",
        "label": "sushiLP",
        "offset": 0,
        "slot": "6",
        "type": "t_contract(IUniswapV2Pair)733"
      },
      {
        "astId": 838,
        "contract": "contracts/MagicGov.sol:TreasureDAO",
        "label": "miniChefV2",
        "offset": 0,
        "slot": "7",
        "type": "t_contract(IMiniChefV2)745"
      },
      {
        "astId": 841,
        "contract": "contracts/MagicGov.sol:TreasureDAO",
        "label": "harvesterFactory",
        "offset": 0,
        "slot": "8",
        "type": "t_contract(IHarvesterFactory)824"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_contract(IAtlasMine)803": {
        "encoding": "inplace",
        "label": "contract IAtlasMine",
        "numberOfBytes": "20"
      },
      "t_contract(IHarvesterFactory)824": {
        "encoding": "inplace",
        "label": "contract IHarvesterFactory",
        "numberOfBytes": "20"
      },
      "t_contract(IMiniChefV2)745": {
        "encoding": "inplace",
        "label": "contract IMiniChefV2",
        "numberOfBytes": "20"
      },
      "t_contract(IUniswapV2Pair)733": {
        "encoding": "inplace",
        "label": "contract IUniswapV2Pair",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => mapping(address => uint256))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_address,t_uint256)"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_string_storage": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}